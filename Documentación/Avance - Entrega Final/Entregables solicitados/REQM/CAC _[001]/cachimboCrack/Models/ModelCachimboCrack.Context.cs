//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cachimboCrack.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cachimboEntities : DbContext
    {
        public cachimboEntities()
            : base("name=cachimboEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<alumno> alumno { get; set; }
        public virtual DbSet<area> area { get; set; }
        public virtual DbSet<carrera> carrera { get; set; }
        public virtual DbSet<cita> cita { get; set; }
        public virtual DbSet<curso> curso { get; set; }
        public virtual DbSet<valoracion> valoracion { get; set; }
    
        public virtual int registrarAlumno(string usuarioAlumno, Nullable<int> codigoCarrera, string contraseñaAlumno, string nombreAlumno, string apellidoAlumno, string celularAlumno, string correoAlumno)
        {
            var usuarioAlumnoParameter = usuarioAlumno != null ?
                new ObjectParameter("usuarioAlumno", usuarioAlumno) :
                new ObjectParameter("usuarioAlumno", typeof(string));
    
            var codigoCarreraParameter = codigoCarrera.HasValue ?
                new ObjectParameter("codigoCarrera", codigoCarrera) :
                new ObjectParameter("codigoCarrera", typeof(int));
    
            var contraseñaAlumnoParameter = contraseñaAlumno != null ?
                new ObjectParameter("contraseñaAlumno", contraseñaAlumno) :
                new ObjectParameter("contraseñaAlumno", typeof(string));
    
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("nombreAlumno", nombreAlumno) :
                new ObjectParameter("nombreAlumno", typeof(string));
    
            var apellidoAlumnoParameter = apellidoAlumno != null ?
                new ObjectParameter("apellidoAlumno", apellidoAlumno) :
                new ObjectParameter("apellidoAlumno", typeof(string));
    
            var celularAlumnoParameter = celularAlumno != null ?
                new ObjectParameter("celularAlumno", celularAlumno) :
                new ObjectParameter("celularAlumno", typeof(string));
    
            var correoAlumnoParameter = correoAlumno != null ?
                new ObjectParameter("correoAlumno", correoAlumno) :
                new ObjectParameter("correoAlumno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarAlumno", usuarioAlumnoParameter, codigoCarreraParameter, contraseñaAlumnoParameter, nombreAlumnoParameter, apellidoAlumnoParameter, celularAlumnoParameter, correoAlumnoParameter);
        }
    
        public virtual int registrarCita(string usuarioAlumno, Nullable<int> codigoCurso, Nullable<int> tipoCita, Nullable<System.DateTime> diaCita, Nullable<System.TimeSpan> horaCita)
        {
            var usuarioAlumnoParameter = usuarioAlumno != null ?
                new ObjectParameter("usuarioAlumno", usuarioAlumno) :
                new ObjectParameter("usuarioAlumno", typeof(string));
    
            var codigoCursoParameter = codigoCurso.HasValue ?
                new ObjectParameter("codigoCurso", codigoCurso) :
                new ObjectParameter("codigoCurso", typeof(int));
    
            var tipoCitaParameter = tipoCita.HasValue ?
                new ObjectParameter("tipoCita", tipoCita) :
                new ObjectParameter("tipoCita", typeof(int));
    
            var diaCitaParameter = diaCita.HasValue ?
                new ObjectParameter("diaCita", diaCita) :
                new ObjectParameter("diaCita", typeof(System.DateTime));
    
            var horaCitaParameter = horaCita.HasValue ?
                new ObjectParameter("horaCita", horaCita) :
                new ObjectParameter("horaCita", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarCita", usuarioAlumnoParameter, codigoCursoParameter, tipoCitaParameter, diaCitaParameter, horaCitaParameter);
        }
    
        public virtual int inscribirCita(Nullable<int> codigoCita, string codigoParticipante)
        {
            var codigoCitaParameter = codigoCita.HasValue ?
                new ObjectParameter("codigoCita", codigoCita) :
                new ObjectParameter("codigoCita", typeof(int));
    
            var codigoParticipanteParameter = codigoParticipante != null ?
                new ObjectParameter("codigoParticipante", codigoParticipante) :
                new ObjectParameter("codigoParticipante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inscribirCita", codigoCitaParameter, codigoParticipanteParameter);
        }
    
        public virtual int registrarAlumno1(string usuarioAlumno, Nullable<int> codigoCarrera, string contraseñaAlumno, string nombreAlumno, string apellidoAlumno, string celularAlumno, string correoAlumno)
        {
            var usuarioAlumnoParameter = usuarioAlumno != null ?
                new ObjectParameter("usuarioAlumno", usuarioAlumno) :
                new ObjectParameter("usuarioAlumno", typeof(string));
    
            var codigoCarreraParameter = codigoCarrera.HasValue ?
                new ObjectParameter("codigoCarrera", codigoCarrera) :
                new ObjectParameter("codigoCarrera", typeof(int));
    
            var contraseñaAlumnoParameter = contraseñaAlumno != null ?
                new ObjectParameter("contraseñaAlumno", contraseñaAlumno) :
                new ObjectParameter("contraseñaAlumno", typeof(string));
    
            var nombreAlumnoParameter = nombreAlumno != null ?
                new ObjectParameter("nombreAlumno", nombreAlumno) :
                new ObjectParameter("nombreAlumno", typeof(string));
    
            var apellidoAlumnoParameter = apellidoAlumno != null ?
                new ObjectParameter("apellidoAlumno", apellidoAlumno) :
                new ObjectParameter("apellidoAlumno", typeof(string));
    
            var celularAlumnoParameter = celularAlumno != null ?
                new ObjectParameter("celularAlumno", celularAlumno) :
                new ObjectParameter("celularAlumno", typeof(string));
    
            var correoAlumnoParameter = correoAlumno != null ?
                new ObjectParameter("correoAlumno", correoAlumno) :
                new ObjectParameter("correoAlumno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarAlumno1", usuarioAlumnoParameter, codigoCarreraParameter, contraseñaAlumnoParameter, nombreAlumnoParameter, apellidoAlumnoParameter, celularAlumnoParameter, correoAlumnoParameter);
        }
    }
}
